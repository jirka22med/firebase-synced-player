// volume-booster.js (OPRAVENÁ VERZE - Chyba ReferenceError opravena)

document.addEventListener('DOMContentLoaded', () => {
    const audioEl = document.getElementById('audioPlayer');
    const boosterSlider = document.getElementById('boosterSlider');
    const boosterValueSpan = document.getElementById('boosterValue');
    const existingVolumeSlider = document.getElementById('volume-slider');

    let audioContext = null; // Inicializujeme na null
    let sourceNode = null;
    let mainGainNode = null; // Toto je náš hlavní zesilovač (GainNode)

    // ***********************************************************************************
    // ZMĚNA ZDE: Funkce updateOverallVolume přesunuta nahoru, před initWebAudio a setupAudioGraph
    // ***********************************************************************************
    // Funkce pro aktualizaci celkové hlasitosti, volaná z obou sliderů
    function updateOverallVolume() {
        // Logika pro updateOverallVolume je volána zde, takže se musí nacházet před voláním
        if (mainGainNode && existingVolumeSlider && boosterSlider) {
            // Hodnota z tvého původního slideru (0-1) - vezmeme ji přímo z elementu
            const normalVolume = parseFloat(existingVolumeSlider.value);
            // Hodnota z našeho booster slideru (1-3)
            const boosterFactor = parseFloat(boosterSlider.value);

            // Celková hlasitost je součin obou
            // Používáme logarithmicVolume z tvého hlavního skriptu, pokud existuje
            const finalVolume = typeof window.logarithmicVolume === 'function'
                                ? window.logarithmicVolume(normalVolume) * boosterFactor
                                : normalVolume * boosterFactor;
            
            mainGainNode.gain.value = finalVolume;

            // Aktualizace zobrazení boosteru
            boosterValueSpan.textContent = `${Math.round(boosterFactor * 100)}%`;
            console.log(`BOOSTER SCRIPT: Celková hlasitost nastavena na: ${mainGainNode.gain.value.toFixed(2)} (Normal: ${normalVolume.toFixed(2)}, Booster: ${boosterFactor.toFixed(2)})`);
        }
    }
    // ***********************************************************************************
    // KONEC ZMĚNY
    // ***********************************************************************************


    // Funkce pro inicializaci Web Audio API a propojení uzlů
    function initWebAudio() {
        if (!audioContext) {
            console.log("BOOSTER SCRIPT: Inicializuji Web Audio API...");
            audioContext = new (window.AudioContext || window.webkitAudioContext)();
            audioContext.resume(); // Zkusíme hned resume, pro Safari a Firefox

            if (audioEl.readyState >= 1) { // HAVE_METADATA nebo vyšší
                setupAudioGraph();
            } else {
                audioEl.addEventListener('loadedmetadata', setupAudioGraph, { once: true });
                audioEl.addEventListener('canplay', setupAudioGraph, { once: true });
            }
        }
    }

    function setupAudioGraph() {
        if (!sourceNode) {
            sourceNode = audioContext.createMediaElementSource(audioEl);
            mainGainNode = audioContext.createGain();

            sourceNode.connect(mainGainNode);
            mainGainNode.connect(audioContext.destination);
            console.log("BOOSTER SCRIPT: Web Audio API graf propojen.");

            updateOverallVolume(); // Okamžitá aktualizace hlasitosti po inicializaci a propojení
        }
    }

    // Zpřístupníme funkci globálně, aby ji mohl volat tvůj hlavní script.js
    window.updateWebAudioVolume = function(newNormalVolumeValueFromMainSlider = null) {
        initWebAudio(); // Zajistíme, že audioContext je aktivní

        if (mainGainNode && existingVolumeSlider && boosterSlider) {
            if (newNormalVolumeValueFromMainSlider !== null) {
                existingVolumeSlider.value = newNormalVolumeValueFromMainSlider;
            }
            updateOverallVolume(); // A provedeme celkovou aktualizaci hlasitosti
        }
    };

    // Funkce pro získání GainNode pro případ mute buttonu v hlavním scriptu
    window.getWebAudioMainGainNode = function() {
        initWebAudio(); // Ujistíme se, že je inicializováno
        return mainGainNode;
    };


    // --- Event Listeners v volume-booster.js ---

    // Posluchač pro náš nový booster slider
    boosterSlider.addEventListener('input', () => {
        window.updateWebAudioVolume();
        if (typeof window.updateVolumeDisplayAndIcon === 'function') {
            window.updateVolumeDisplayAndIcon();
        }
    });

    audioEl.addEventListener('play', () => {
        initWebAudio();
        updateOverallVolume();
    }, { once: true });

    audioEl.addEventListener('volumechange', () => {
        initWebAudio();
    }, { once: true });


    // Inicializace zobrazené hodnoty boosteru při načtení stránky
    boosterValueSpan.textContent = `${Math.round(parseFloat(boosterSlider.value) * 100)}%`;

    setTimeout(() => {
        if (audioEl.readyState >= 3 && !audioEl.paused) {
            initWebAudio();
        }
    }, 500);
});
